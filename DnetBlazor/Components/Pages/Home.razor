@page "/"
@attribute [StreamRendering]

@using DnetLibrary.Domain
@using DnetLibrary.Repo

@inject RepoMan Repo

<PageTitle>Home</PageTitle>

<h1>Places of interest in Nepal</h1>

<div class="mt-5">
    @if (Mountains!.Any())
    {
        <h3>Mountains</h3>
        <table class="table table-light">
            <thead>
            <th>Name</th>
            <th>Region</th>
            <th>GUID</th>
            </thead>
            @foreach (var place in Mountains!)
            {
                <tr>
                    <td>@place.Name </td> <td>@place.Region.ToString()</td> <td class="small text-black-50">@place.Id</td>
                </tr>
            }
        </table>

    }
    else
    {
        <p>Loading mountains...</p>
    }
</div>

<div class="mt-5">
    @if (Temples!.Any())
    {
    <h3>Temples</h3>
    <table class="table table-light">
        <thead>
        <th>Name</th>
        <th>Region</th>
        <th>GUID</th>
        </thead>
        @foreach (var place in Temples!)
        {
        <tr>
            <td>@place.Name </td> <td>@place.Region.ToString()</td> <td class="small text-black-50">@place.Id</td>
        </tr>
        }
    </table>

    }
    else
    {
    <p>Loading temples...</p>
    }
</div>


@code{

    IEnumerable<Mountain> Mountains { get; set; } = [];
    IEnumerable<Temple> Temples { get; set; } = [];
    protected override async Task OnInitializedAsync()
    {

        await Task.Delay(500);
        Mountains = await Repo.Mountains.GetAll();
        Temples = await Repo.Temples.GetAll();

    }

}
